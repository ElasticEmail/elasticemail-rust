/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InboundPayload {
    /// Filter of the inbound data
    #[serde(rename = "Filter")]
    pub filter: String,
    /// Name of this route
    #[serde(rename = "Name")]
    pub name: String,
    #[serde(rename = "FilterType")]
    pub filter_type: models::InboundRouteFilterType,
    #[serde(rename = "ActionType")]
    pub action_type: models::InboundRouteActionType,
    /// Email to forward the inbound to
    #[serde(rename = "EmailAddress", skip_serializing_if = "Option::is_none")]
    pub email_address: Option<String>,
    /// Address to notify about the inbound
    #[serde(rename = "HttpAddress", skip_serializing_if = "Option::is_none")]
    pub http_address: Option<String>,
}

impl InboundPayload {
    pub fn new(filter: String, name: String, filter_type: models::InboundRouteFilterType, action_type: models::InboundRouteActionType) -> InboundPayload {
        InboundPayload {
            filter,
            name,
            filter_type,
            action_type,
            email_address: None,
            http_address: None,
        }
    }
}

