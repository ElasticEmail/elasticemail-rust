/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://openapi-generator.tech
 */

/// CampaignOptions : Different send options for a Campaign



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CampaignOptions {
    #[serde(rename = "DeliveryOptimization", skip_serializing_if = "Option::is_none")]
    pub delivery_optimization: Option<crate::models::DeliveryOptimizationType>,
    /// Should the opens be tracked? If no value has been provided, Account's default setting will be used.
    #[serde(rename = "TrackOpens", skip_serializing_if = "Option::is_none")]
    pub track_opens: Option<bool>,
    /// Should the clicks be tracked? If no value has been provided, Account's default setting will be used.
    #[serde(rename = "TrackClicks", skip_serializing_if = "Option::is_none")]
    pub track_clicks: Option<bool>,
    /// Date when this Campaign is scheduled to be sent on
    #[serde(rename = "ScheduleFor", skip_serializing_if = "Option::is_none")]
    pub schedule_for: Option<String>,
    #[serde(rename = "SplitOptions", skip_serializing_if = "Option::is_none")]
    pub split_options: Option<Box<crate::models::SplitOptions>>,
}

impl CampaignOptions {
    /// Different send options for a Campaign
    pub fn new() -> CampaignOptions {
        CampaignOptions {
            delivery_optimization: None,
            track_opens: None,
            track_clicks: None,
            schedule_for: None,
            split_options: None,
        }
    }
}


